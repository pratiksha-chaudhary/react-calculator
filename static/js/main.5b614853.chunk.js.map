{"version":3,"sources":["largeButton.js","regularButton.js","display.js","App.js","reportWebVitals.js","index.js"],"names":["LargeButton","text","onClick","className","RegularButton","Display","previousOperand","currentOperand","operation","App","useState","setPreviousOperand","setCurrentOperand","setOperation","updateOperands","event","console","log","operandPressed","target","innerText","includes","updateOperation","slice","result","prev","parseFloat","current","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b614853.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction LargeButton({ text, onClick }) {\n  return (\n    <button className=\"span-two\" onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n\nexport default LargeButton;\n","import React from \"react\";\n\nfunction RegularButton({ text, onClick }) {\n  return <button onClick={onClick}>{text}</button>;\n}\n\nexport default RegularButton;\n","import React from \"react\";\n\nfunction Display({ previousOperand, currentOperand, operation }) {\n  return (\n    <div className=\"output\">\n      <div className=\"previous-operand\">{previousOperand}</div>\n      <div className=\"current-operand\">\n        {operation} {currentOperand}\n      </div>\n    </div>\n  );\n}\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport LargeButton from \"./largeButton\";\nimport RegularButton from \"./regularButton\";\nimport Display from \"./display\";\n\nfunction App() {\n  const [previousOperand, setPreviousOperand] = useState(\"\");\n  const [currentOperand, setCurrentOperand] = useState(\"\");\n  const [operation, setOperation] = useState(\"\");\n  const updateOperands = (event) => {\n    console.log(\"update operands\");\n    const operandPressed = event.target.innerText;\n    if (operandPressed === \".\" && currentOperand.includes(\".\")) {\n      return;\n    }\n    setCurrentOperand(currentOperand + operandPressed);\n  };\n\n  const compute = () => {\n    console.log(\"compute\");\n    setPreviousOperand(\"\");\n    let result;\n    const prev = parseFloat(previousOperand);\n    const current = parseFloat(currentOperand);\n    switch (operation) {\n      case \"+\":\n        result = prev + current;\n        break;\n      case \"-\":\n        result = prev - current;\n        break;\n      case \"*\":\n        result = prev * current;\n        break;\n      case \"/\":\n        result = prev / current;\n        break;\n      default:\n        return;\n    }\n    setCurrentOperand(result.toString());\n    setOperation(\"\");\n  };\n  const updateOperation = (event) => {\n    setOperation(event.target.innerText);\n    setPreviousOperand(currentOperand);\n    setCurrentOperand(\"\");\n  };\n  const clear = () => {\n    setPreviousOperand(\"\");\n    setCurrentOperand(\"\");\n    setOperation(null);\n  };\n\n  const performDelete = () => {\n    setCurrentOperand(currentOperand.slice(0, -1));\n  };\n\n  return (\n    <div className=\"calculator-grid\">\n      <Display\n        currentOperand={currentOperand}\n        previousOperand={previousOperand}\n        operation={operation}\n      />\n      <LargeButton onClick={clear} text=\"AC\" />\n      <RegularButton onClick={performDelete} text=\"DEL\" />\n      <RegularButton onClick={updateOperation} text=\"/\" />\n      <RegularButton onClick={updateOperands} text=\"1\" />\n      <RegularButton onClick={updateOperands} text=\"2\" />\n      <RegularButton onClick={updateOperands} text=\"3\" />\n      <RegularButton onClick={updateOperation} text=\"*\" />\n      <RegularButton onClick={updateOperands} text=\"4\" />\n      <RegularButton onClick={updateOperands} text=\"5\" />\n      <RegularButton onClick={updateOperands} text=\"6\" />\n      <RegularButton onClick={updateOperation} text=\"+\" />\n      <RegularButton onClick={updateOperands} text=\"7\" />\n      <RegularButton onClick={updateOperands} text=\"8\" />\n      <RegularButton onClick={updateOperands} text=\"9\" />\n      <RegularButton onClick={updateOperation} text=\"-\" />\n      <RegularButton onClick={updateOperands} text=\".\" />\n      <RegularButton onClick={updateOperands} text=\"0\" />\n      <LargeButton onClick={compute} text=\"=\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}